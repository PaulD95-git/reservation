"""
Django settings for my_project project.

Generated by 'django-admin startproject' using Django 4.2.20.

For more information on this file, see:
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see:
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

# Import necessary modules
from pathlib import Path
import os
import dj_database_url

# Load environment variables if 'env.py' exists (useful for local development)
if os.path.isfile('env.py'):
    import env

# Define the base directory of the project
BASE_DIR = Path(__file__).resolve().parent.parent

# Define the directory for templates
TEMPLATES_DIR = BASE_DIR / 'templates'

# Security settings
SECRET_KEY = 'django-insecure-8l$@%n$d$o7^w=#u900kyxjr3fu8b_fk7_si#kv0w*6x+a@vtu'  # Replace in production with environment variable
DEBUG = False  # Set to False in production

# Allowed hosts for security reasons
ALLOWED_HOSTS = [
    '.herokuapp.com',  # Allow Heroku subdomains
    'localhost',  # Allow local development
    '127.0.0.1',  # Localhost IP address
]

# Installed applications (Django built-in and custom apps)
INSTALLED_APPS = [
    'django.contrib.admin',  # Admin panel
    'django.contrib.auth',  # Authentication framework
    'django.contrib.contenttypes',  # Content types system
    'django.contrib.sessions',  # Session framework
    'django.contrib.messages',  # Messaging framework
    'django.contrib.staticfiles',  # Static files handling

    # Custom applications
    'restaurant',  # Main application
]

# Middleware (handles requests and responses)
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',  # Security middleware
    'whitenoise.middleware.WhiteNoiseMiddleware',  # Static file serving (for Heroku)
    'django.contrib.sessions.middleware.SessionMiddleware',  # Session management
    'django.middleware.common.CommonMiddleware',  # Common middleware
    'django.middleware.csrf.CsrfViewMiddleware',  # CSRF protection
    'django.contrib.auth.middleware.AuthenticationMiddleware',  # Authentication management
    'django.contrib.messages.middleware.MessageMiddleware',  # Messaging framework
    'django.middleware.clickjacking.XFrameOptionsMiddleware',  # Prevents clickjacking attacks
]

# Root URL configuration
ROOT_URLCONF = 'my_project.urls'

# Templates configuration
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',  # Template engine
        'DIRS': [TEMPLATES_DIR],  # Directory for templates
        'APP_DIRS': True,  # Enable app-level templates
        'OPTIONS': {
            'context_processors': [  # Context processors for common template variables
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# WSGI application
WSGI_APPLICATION = 'my_project.wsgi.application'

# Database configuration (use dj_database_url for PostgreSQL in production)
DATABASES = {
    'default': dj_database_url.parse(os.environ.get("DATABASE_URL"))
}

# CSRF Trusted Origins (domains allowed for CSRF protection)
CSRF_TRUSTED_ORIGINS = [
    "https://*.codeinstitute-ide.net/",  # Allow Code Institute IDE
    "https://*.herokuapp.com",  # Allow Heroku domains
]

# Password validation settings
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

# Localization settings
LANGUAGE_CODE = 'en-us'  # Default language
TIME_ZONE = 'UTC'  # Default timezone
USE_I18N = True  # Enable internationalization
USE_TZ = True  # Enable timezone support

# Static files configuration (CSS, JavaScript, Images)
STATIC_URL = '/static/'  # URL for serving static files
STATIC_ROOT = BASE_DIR / 'staticfiles'  # Directory for collected static files in production
STATICFILES_DIRS = [
    BASE_DIR / 'static',  # Custom static directory
]

# Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Authentication and redirect settings
LOGOUT_REDIRECT_URL = '/'  # Redirect after logout
LOGIN_REDIRECT_URL = 'home'  # Redirect after login

# Email configuration (update with your credentials or use environment variables)
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = "smtp.gmail.com"  # SMTP server
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = "your_email@gmail.com"  # Replace with your email
EMAIL_HOST_PASSWORD = "your_password"  # Use an app password for security