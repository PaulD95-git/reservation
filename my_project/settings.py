"""
Django settings for my_project project.

Generated by 'django-admin startproject' using Django 4.2.20.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

# Import necessary libraries
from pathlib import Path
import os
import dj_database_url

# Check if the env.py file exists to load sensitive settings (e.g., database URL, secret key)
if os.path.isfile('env.py'):
    import env

# Define the base directory of the project
BASE_DIR = Path(__file__).resolve().parent.parent

# Directory where the templates are stored
TEMPLATES_DIR = os.path.join(BASE_DIR, 'templates')

# Security settings
SECRET_KEY = 'django-insecure-8l$@%n$d$o7^w=#u900kyxjr3fu8b_fk7_si#kv0w*6x+a@vtu'  # Keep this secure in production
DEBUG = False # Set to False for production

# List of allowed hosts for security reasons
ALLOWED_HOSTS = [
    '.herokuapp.com',  # Allow Heroku subdomains
    'localhost',        # Allow localhost for local development
    '127.0.0.1',       # Localhost IP address
]

# Application definition
INSTALLED_APPS = [
    # Django default apps
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Your custom apps
    'restaurant',  # Your main app
]

# Middleware configuration (process requests and responses)
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',  # Handles security
    'whitenoise.middleware.WhiteNoiseMiddleware',     # Handles static files for Heroku deployment
    'django.contrib.sessions.middleware.SessionMiddleware',  # Manages sessions
    'django.middleware.common.CommonMiddleware',      # Common middleware
    'django.middleware.csrf.CsrfViewMiddleware',     # Cross-Site Request Forgery protection
    'django.contrib.auth.middleware.AuthenticationMiddleware',  # Manages user authentication
    'django.contrib.messages.middleware.MessageMiddleware',  # Manages messages
    'django.middleware.clickjacking.XFrameOptionsMiddleware',  # Prevents clickjacking
]

# URL configuration for the project
ROOT_URLCONF = 'my_project.urls'

# Template configuration
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',  # Django template engine
        'DIRS': [os.path.join(BASE_DIR, 'templates')],  # Directory for templates
        'APP_DIRS': True,  # Allow loading templates from app-level directories
        'OPTIONS': {
            'context_processors': [  # Add context processors for common variables in templates
                'django.template.context_processors.debug',  # Debugging variables
                'django.template.context_processors.request',  # Request-specific context
                'django.contrib.auth.context_processors.auth',  # Authentication context
                'django.contrib.messages.context_processors.messages',  # Message framework context
            ],
        },
    },
]

# WSGI application
WSGI_APPLICATION = 'my_project.wsgi.application'

# Database settings
# Default: SQLite, but using dj_database_url for Heroku/PostgreSQL
DATABASES = {
    'default': dj_database_url.parse(os.environ.get("DATABASE_URL"))
}

# CSRF Trusted Origins (Allow requests from these domains)
CSRF_TRUSTED_ORIGINS = [
    "https://*.codeinstitute-ide.net/",  # Allow Code Institute IDE
    "https://*.herokuapp.com"  # Allow Heroku domains
]

# Password validation settings
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

# Localization settings
LANGUAGE_CODE = 'en-us'  # Language used in the project
TIME_ZONE = 'UTC'  # Timezone for the project
USE_I18N = True  # Enable internationalization
USE_TZ = True  # Enable timezone support

# Static files (CSS, JavaScript, Images)
# Static files settings, which are essential for frontend assets
STATIC_URL = '/static/'  # URL for serving static files

# Directory where collected static files will be stored (used for production with collectstatic)
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # Keep it consistent

# Define directories for additional static files
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),  # Add 'static' directory to be used for custom assets like CSS and JS
]

# Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Redirect URLs after logout and login
LOGOUT_REDIRECT_URL = '/'  # Where to redirect after logout
LOGIN_REDIRECT_URL = 'home'  # Where to redirect after login

# The base directory of your project (redefined for convenience)
BASE_DIR = Path(__file__).resolve().parent.parent

# Define the path to the templates directory
TEMPLATES_DIR = BASE_DIR / 'templates'  # This points to the templates folder in the project directory
